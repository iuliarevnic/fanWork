is is : pop 0
. . : pop 0
main main : pop 0
> > : pop 0
* * : pop 0
STMTLIST read : STMTC 18
A read : E 3
List List : pop 0
return return : pop 0
STRUCTSTMT while : WHILESTMT 36
toString toString : pop 0
CMPDSTMT { : {STMTLIST} 17
end end : pop 0
else else : pop 0
del del : pop 0
int int : pop 0
A print : E 3
STMTLIST print : STMTC 18
print print : pop 0
DECLLIST @ : DECLARATIONA 2
A { : E 3
EXPRESSION ( : EXPRESSION+TERM 26
RELATION > : > 44
CONDITION ( : (EXPRESSIONRELATIONEXPRESSION) 39
{ { : pop 0
STRUCTSTMT if : IFSTMT 35
; ; : pop 0
+ + : pop 0
>= >= : pop 0
RELATION < : < 40
RELATION != : != 45
RELATION >= : >= 43
read read : pop 0
boolean boolean : pop 0
STMT if : STRUCTSTMT 22
C while : STMTLIST 20
A if : E 3
STMT print : SIMPLSTMT 21
WHILESTMT while : whileCONDITIONSTMT 38
C return : E 19
( ( : pop 0
$ $ : acc 0
@ @ : pop 0
!= != : pop 0
== == : pop 0
C read : STMTLIST 20
0 0 : pop 0
< < : pop 0
STMTLIST if : STMTC 18
RELATION == : == 42
IFSTMT if : ifCONDITIONSTMTelseSTMT 37
STMT { : STRUCTSTMT 22
string string : pop 0
add add : pop 0
type type : pop 0
C print : STMTLIST 20
while while : pop 0
C { : STMTLIST 20
SIMPLSTMT print : IOSTMT 24
A ; : ;DECLLIST 4
C } : E 19
STMT while : STRUCTSTMT 22
if if : pop 0
} } : pop 0
) ) : pop 0
<- <- : pop 0
- - : pop 0
<= <= : pop 0
STMT read : SIMPLSTMT 21
SIMPLSTMT read : IOSTMT 24
S begin : beginintmain(){DECLLISTSTMTLISTreturn0;}end 1
RELATION <= : <= 41
A while : E 3
STMTLIST { : STMTC 18
begin begin : pop 0
new new : pop 0
STMTLIST while : STMTC 18
C if : STMTLIST 20
STRUCTSTMT { : CMPDSTMT 34
